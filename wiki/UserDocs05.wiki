#summary user documentation for release 0.5.x
#labels Phase-Deploy,In-Progress

<wiki:toc />

= Deployment =
checkboxTree needs jQuery library to work. jQueryUI is required only if you want to improve collapse/expand effects handling.

For best result, always use last library versions.

Please, note that the script doesn't work with jQuery 1.4.3 and 1.4.4. If you need, you can patch the script as described in issue 20.
{{{
        <!-- include jQuery libraries -->
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.3/jquery-ui.min.js"></script>

        <!-- include checkboxTree plugin -->
        <link rel="stylesheet" type="text/css" href="jquery.checkboxtree.min.css">
        <script type="text/javascript" src="jquery.checkboxtree.min.js"></script>

        <!-- initialize checkboxTree plugin -->
        <script type="text/javascript">
        //<!--
            $(document).ready(function() {
                $('#tree').checkboxTree({
                /*
                    specify here your options
                */
                });
            });
        //-->
        </script>
}}}
== Online libraries ==
An online version of checkboxtree plugin is hosted on googlecode and can be directly used including the following code:
{{{
        <!-- include checkboxTree plugin -->
        <link rel="stylesheet" type="text/css" href="http://checkboxtree.googlecode.com/svn/tags/checkboxtree-X.X.X/jquery.checkboxtree.min.css">
        <script type="text/javascript" src="http://checkboxtree.googlecode.com/svn/tags/checkboxtree-X.X.X/jquery.checkboxtree.min.js"></script>
}}}
where X.X.X is desidered release version.

= Configurable options =
Following options can be specified when checkboxTree is initialized.

~~Striked~~ options are deprecated: they still working in this release, but will be removed from next release.

|| *options*           || *type*         || *default value*        || *description* ||
|| collapsable         || boolean        || true                   || If tree has collapsable nodes. ||
|| collapseAllElement  || object|string  || ''                     || Attach a collapse all event to one or more DOM element. Value passed can be either the object representing element or the string used as element selector. When user click on the identified element collapse all element will be trough. ||
|| collapsed           || boolean        || false                  || If all nodes must be all collapsed on script start. ||
|| collapseDuration    || integer        || 500                    || Collapse effect duration in ms. ||
|| collapseEffect      || string         || 'blind'                || Effect to use for node collapse. In case of very big tree, effects can slow down script execution: to fix this problem, set option value to '' to remove effect. Requires jQueryUI. See jQueryUI effect documentation for effect list. ||
|| collapseImage       || string         || ''                     || Image to use as anchor for expanded node. ||
|| container           || string         || 'checkboxTree`[n]`'    || Class to contain tree. Is usefull if you want to handle more than one tree in the page. ||
|| cssClass            || string         || 'checkboxTree'         || Class for css linking. ||
|| expandAllElement    || object|string  || ''                     || Attach a expand all event to your own element. Value passed can be the object representing element or the string used as element selector. ||
|| expandDuration      || integer        || 500                    || Collapse effect duration in ms. ||
|| expandEffect        || string         || 'blind'                || Effect to use for node collapse. In case of very big tree, effects can slow down script execution: to fix this problem, set option value to '' to remove effect. Requires jQueryUI. See jQueryUI effect documentation for effect list. ||
|| expandImage         || string         || ''                     || Image to use as anchor for collapsed nodes. ||
|| initializeChecked   || string         || 'expanded'             || On tree setup, decide the initial state of checked nodes. Can be set to 'expanded' or 'collapsed'. ||
|| initializeUnchecked || string         || 'expanded'             || On tree setup, decide the initial state of unchecked nodes. Can be set to 'expanded' or 'collapsed'. ||
|| leafImage           || string         || ''                     || Image to use for not collapsable nodes. ||
|| onCheck             || object         || [#onCheck Read more]   || Contains operations to perform when a node is checked. [#onCheck Read more] ||
|| onUncheck           || object         || [#onUncheck Read more] || Contains operations to perform when a node is unchecked. [#onUncheck Read more] ||

== onCheck/onUncheck ==
This two options are objects formed by options:
 * ancestors: specify what should ----- to ancestors of a checked/unchecked node.
 * descendants: specify what should  ---- to descendants of a checked/unchecked node.
 * node: specify what should ----- to a node when user click to check/uncheck it.

=== default configuration ===
{{{
onCheck: {
    ancestors: 'check', //or '', 'uncheck', 'checkIfFull'
    descendants: 'check', //or '', 'uncheck'
    node: '' // or 'collapse', 'expand'
},
}}}

{{{
onUncheck: {
    ancestors: '', //or 'check', 'uncheck'
    descendants: 'uncheck', //or '', 'check'
    node: '' // or 'collapse', 'expand'
}
}}}

= Public methods =

|| check(li)     || Check passed node. ||
|| checkAll()    || Check all nodes. ||
|| collapse(li)  || Collapse passed node. ||
|| collapseAll() || Collapse all nodes. ||
|| expand(li)    || Expand passed node. ||
|| expandAll()   || Expand all nodes. ||
|| uncheck(li)   || Uncheck passed node. ||
|| uncheckAll()  || Uncheck all nodes. ||

== Example of public method usage ==

Each tree node is something like that:
{{{
<li id="nodeIWantToCheck"><input type="checkbox">Node to check
}}}

To call a method that operates on a node, you need to pass the correspondent li element.
{{{
tree = $('#tree').checkboxTree();
tree.collapse($('#nodeIWantToCheck'));
}}}